version: "3"

services:
    elasticsearch:
        image: elasticsearch:7.4.0
        networks:
            - logging
        ports:
            - "9200:9200"
        environment:
            - discovery.type=single-node
        volumes:
            - elasticsearch-data:/usr/share/elasticsearch/data
            - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
        labels:
            com.docker.stack.namespace: "logging"
            com.docker.service.name: "elasticsearch"
        deploy:
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 60s
            restart_policy:
                condition: none
                max_attempts: 5
            labels:
                com.docker.stack.namespace: "logging"
                com.docker.service.name: "elasticsearch"
    curator:
        image: robinong79/docker-elasticsearch-curator:v1.0
        networks:
            - logging
        environment:
            - ELASTICSEARCH_HOST=elasticsearch
            - ELASTICSEARCH_PORT=9200
            - INTERVAL_IN_HOURS=12
        # volumes:
        #     - ./curator:/var/curator
        labels:
            com.docker.stack.namespace: "logging"
            com.docker.service.name: "curator"
        deploy:
            mode: replicated
            update_config:
                parallelism: 1
                delay: 60s
            restart_policy:
                condition: none
                max_attempts: 5
            labels:
                com.docker.stack.namespace: "logging"
                com.docker.service.name: "curator"
    logstash:
        image: logstash:7.4.0
        depends_on:
            - elasticsearch
        ports:
            - "12201:12201/udp"
            - "8080:8082"
        networks:
            - logging
        command: -e "input { gelf {} } output { elasticsearch { hosts => ['elasticsearch']} stdout {} }"
        labels:
            com.docker.stack.namespace: "logging"
            com.docker.service.name: "logstash"
        deploy:
            mode: replicated
            update_config:
                parallelism: 1
                delay: 60s
            restart_policy:
                condition: none
                max_attempts: 5
            labels:
                com.docker.stack.namespace: "logging"
                com.docker.service.name: "logstash"

    kibana:
        image: kibana:7.4.0
        depends_on:
            - elasticsearch
        ports:
            - "5601:5601"
        networks:
            - logging
        environment:
            - ELASTICSEARCH_URL=http://elasticsearch:9200
        labels:
            com.docker.stack.namespace: "logging"
            com.docker.service.name: "kibana"
        deploy:
            mode: replicated
            update_config:
                parallelism: 1
                delay: 60s
            restart_policy:
                condition: none
                max_attempts: 5
            labels:
                com.docker.stack.namespace: "logging"
                com.docker.service.name: "kibana"

    elastalert:
        image: ivankrizsan/elastalert:0.1.8
        ports:
            - "3030:3030"
        networks:
            - logging
        environment:
            - ELASTALERT_CONFIG=elastalertconfig.yaml
            - CONFIG_DIR=/opt/config
            - LOG_DIR=/opt/logs
            - ELASTALERT_CONFIG=/opt/config/elastalertconfig.yaml
            - ELASTICSEARCH_PORT=9200
            - ELASTICSEARCH_HOST=elasticsearch
            - ELASTALERT_SUPERVISOR_CONF=/opt/config/elastalert_supervisord.conf
        volumes:
            - ./elastalert/config:/opt/config
            - ./elastalert/rules:/opt/rules
        labels:
            com.docker.stack.namespace: "monitoring"
            com.docker.service.name: "elastalert"
        deploy:
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 60s
            restart_policy:
                condition: on-failure
                max_attempts: 5
            labels:
                com.docker.stack.namespace: "monitoring"
                com.docker.service.name: "elastalert"    

networks:
    logging:
        external: true

volumes:
    elasticsearch-data:
        driver: local
